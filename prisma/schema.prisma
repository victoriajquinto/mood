// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  clerkId String         @unique
  email   String         @unique
  entries JournalEntry[] //creates a one to many relationship between a user and their journal entries.
}

model JournalEntry {
  id        String   @id @default(uuid()) //uuid = unique user id. random string generated by computer
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  userId String // create column called userId
  user   User   @relation(fields: [userId], references: [id]) //establishes relationship between JournalEntry's userId and User's id, where User's id is the foreign key for JournalEntry's userId. this needs to be done on both ends of the relationship

  analysis Analysis? //? means it is an optional column. in this case, Analysis has to be optional because Analysis and journal entry have a one to one relationship. if both are required, then you can't create a new journal entry because it would need to have an existing analysis to pair with (and you can't analyze a nonexistent journal entry)
  content  String    @db.Text

  @@unique([userId]) //With `relationMode = "prisma"`, no foreign keys are used, so relation fields will not benefit from the index usually created by the relational database under the hood. This can lead to poor performance when querying these fields. Therefore, you add index manually. Learn more at https://pris.ly/d/relation-mode-prisma-indexes"
}

model Analysis {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  entryId String
  entry   JournalEntry @relation(fields: [entryId], references: [id])

  mood     String
  summary  String  @db.Text
  color    String
  negative Boolean

  @@unique([entryId])
}
